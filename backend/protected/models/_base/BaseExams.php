<?php

/**
 * This is the model base class for the table "exams".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Exams".
 *
 * Columns in table "exams" available as properties of the model,
 * followed by relations of table "exams" available as properties of the model.
 *
 * @property integer $idexams
 * @property string $date
 * @property string $date_exam
 * @property string $name
 * @property string $local
 * @property string $note
 * @property string $image
 * @property string $file
 * @property integer $iddoctor
 * @property integer $iduser
 * @property string $notify
 *
 * @property Doctor $doctor
 * @property User $user
 */
abstract class BaseExams extends GxActiveRecord {
	
    
    public $image_delete;
	public $file_delete;
	    
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'exams';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Exams|Exams', $n);
	}

	public static function representingColumn() {
		return array('date');
	}

	public function rules() {
		return array(
			array('date, name, iddoctor, iduser', 'required'),
			array('iddoctor, iduser', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>100),
			array('local', 'length', 'max'=>200),
			array('image', 'length', 'max'=>120),
			array('file', 'length', 'max'=>130),
			array('notify', 'length', 'max'=>1),
			array('note', 'safe'),
			array('image', 'file', 'types'=>'jpg,png', 'allowEmpty'=>true),
			array('image_delete', 'length', 'max'=>1),
			// array('file', 'allowEmpty'=>true),
			// array('file_delete', 'length', 'max'=>1),
			array('local, note, image, file, notify', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idexams, date, date_exam, name, local, note, image, file, iddoctor, iduser, notify', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'doctor' => array(self::BELONGS_TO, 'Doctor', 'iddoctor'),
			'user' => array(self::BELONGS_TO, 'User', 'iduser'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idexams' => Yii::t('app', 'Idexams'),
			'date' => Yii::t('app', 'Date'),
			'date_exam' => Yii::t('app', 'Date Exam'),
			'name' => Yii::t('app', 'Name'),
			'local' => Yii::t('app', 'Local'),
			'note' => Yii::t('app', 'Note'),
			'image' => Yii::t('app', 'Image'),
			'file' => Yii::t('app', 'File'),
			'iddoctor' => null,
			'iduser' => null,
			'notify' => Yii::t('app', 'Notify'),
			'doctor' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idexams', $this->idexams);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('date_exam', $this->date_exam, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('local', $this->local, true);
		$criteria->compare('note', $this->note, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('file', $this->file, true);
		$criteria->compare('iddoctor', $this->iddoctor);
		$criteria->compare('iduser', $this->iduser);
		$criteria->compare('notify', $this->notify, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}