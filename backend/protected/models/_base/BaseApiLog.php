<?php

/**
 * This is the model base class for the table "api_log".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ApiLog".
 *
 * Columns in table "api_log" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idapi_log
 * @property string $habilitar
 * @property string $ip
 * @property string $data
 * @property string $nome
 * @property string $app
 * @property string $login
 * @property string $token
 * @property string $uid
 * @property string $controller
 * @property string $action
 * @property string $get
 * @property string $post
 * @property string $api_retorno
 * @property string $versao
 * @property string $status
 *
 */
abstract class BaseApiLog extends GxActiveRecord {
	
    
        
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'api_log';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ApiLog|ApiLogs', $n);
	}

	public static function representingColumn() {
		return array('habilitar');
	}

	public function rules() {
		return array(
			array('habilitar, app, status', 'length', 'max'=>1),
			array('ip, nome, login, token, uid, controller, action, versao', 'length', 'max'=>100),
			array('data, get, post, api_retorno', 'safe'),
			array('habilitar, ip, data, nome, app, login, token, uid, controller, action, get, post, api_retorno, versao, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idapi_log, habilitar, ip, data, nome, app, login, token, uid, controller, action, get, post, api_retorno, versao, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idapi_log' => Yii::t('app', 'Idapi Log'),
			'habilitar' => Yii::t('app', 'Habilitar'),
			'ip' => Yii::t('app', 'Ip'),
			'data' => Yii::t('app', 'Data'),
			'nome' => Yii::t('app', 'Nome'),
			'app' => Yii::t('app', 'App'),
			'login' => Yii::t('app', 'Login'),
			'token' => Yii::t('app', 'Token'),
			'uid' => Yii::t('app', 'Uid'),
			'controller' => Yii::t('app', 'Controller'),
			'action' => Yii::t('app', 'Action'),
			'get' => Yii::t('app', 'Get'),
			'post' => Yii::t('app', 'Post'),
			'api_retorno' => Yii::t('app', 'Api Retorno'),
			'versao' => Yii::t('app', 'Versao'),
			'status' => Yii::t('app', 'Status'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idapi_log', $this->idapi_log);
		$criteria->compare('habilitar', $this->habilitar, true);
		$criteria->compare('ip', $this->ip, true);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('app', $this->app, true);
		$criteria->compare('login', $this->login, true);
		$criteria->compare('token', $this->token, true);
		$criteria->compare('uid', $this->uid, true);
		$criteria->compare('controller', $this->controller, true);
		$criteria->compare('action', $this->action, true);
		$criteria->compare('get', $this->get, true);
		$criteria->compare('post', $this->post, true);
		$criteria->compare('api_retorno', $this->api_retorno, true);
		$criteria->compare('versao', $this->versao, true);
		$criteria->compare('status', $this->status, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}