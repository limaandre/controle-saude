<?php

/**
 * This is the model base class for the table "garbage".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Garbage".
 *
 * Columns in table "garbage" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $habilitar
 * @property string $data
 * @property integer $idusuario
 * @property string $tabela
 * @property string $id
 * @property string $dados
 * @property string $sql_insert
 *
 */
abstract class BaseGarbage extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'garbage';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Garbage|Garbages', $n);
	}

	public static function representingColumn() {
		return 'habilitar';
	}

	public function rules() {
		return array(
			array('idusuario', 'numerical', 'integerOnly'=>true),
			array('habilitar', 'length', 'max'=>1),
			array('tabela, id', 'length', 'max'=>100),
			array('data, dados, sql_insert', 'safe'),
			array('habilitar, data, idusuario, tabela, id, dados, sql_insert', 'default', 'setOnEmpty' => true, 'value' => null),
			array('habilitar, data, idusuario, tabela, id, dados, sql_insert', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'habilitar' => Yii::t('app', 'Habilitar'),
			'data' => Yii::t('app', 'Data'),
			'idusuario' => Yii::t('app', 'Idusuario'),
			'tabela' => Yii::t('app', 'Tabela'),
			'id' => Yii::t('app', 'ID'),
			'dados' => Yii::t('app', 'Dados'),
			'sql_insert' => Yii::t('app', 'Sql Insert'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('habilitar', $this->habilitar, true);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('idusuario', $this->idusuario);
		$criteria->compare('tabela', $this->tabela, true);
		$criteria->compare('id', $this->id, true);
		$criteria->compare('dados', $this->dados, true);
		$criteria->compare('sql_insert', $this->sql_insert, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}